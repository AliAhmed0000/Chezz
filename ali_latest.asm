.286

draw_rect MACRO color
local l1
    mov dx,di
    mov bh,20
    mov al,color
    l1: mov cx,40
        rep STOSB
        add dx,320
        mov di,dx
        dec BH
        jnz l1
endm draw_rect
;-------------
draw_rect_xy MACRO x,y
local back
    mov ax,40d
    mul x
    mov x_cursor_current,ax
    mov x_cursor_current_end,ax
    add x_cursor_current_end,40d
    
    mov ax,20d
    mul y
    mov y_cursor_current,ax
    mov y_cursor_current_end,ax
    add y_cursor_current_end,20d  
    
    xor ax,ax
    
    mov ah,0Dh
    mov cx,x_cursor_current
    mov dx,y_cursor_current
    int 10h
    
    mov ah,0Ch
    ;mov al,09
    back: int 10h
        inc cx
        cmp cx,x_cursor_current_end 
        jnz back  
        
        inc dx
        mov cx,x_cursor_current
        cmp dx,y_cursor_current_end
        jnz back
    
    
    
    
endm draw_rect_xy
;-------------
draw_rect_trans MACRO color
    local l1,l2,l3,end
        mov dx,di
        mov bl,es:[di]
        mov w_counter,40
        mov l_counter,20
        mov al,color
        l1: cmp es:[di],bl
            jnz l2
            
            mov cx,1
            rep stosb
            
        l3: dec w_counter
            jnz l1
            mov w_counter,40
            add dx,320
            mov di,dx
            dec l_counter
            jnz l1
            jmp end
            
            l2: inc di
            jmp l3
      end:           
endm draw_rect_trans
;-------------
draw_piece MACRO piece,x_piece,y_piece
local l1,l2,skip_draw

mov si,offset piece
mov al,piece           ;just for storing the piece in piece_background
mov piece_background,al;to know background color of piece
mov ax,20d
mov bx,y_piece
mul bx  ; ax = y * 20
mov bx,ax
mov piece_y_end,bx
add piece_y_end,20d
l1:
    mov ax,40d
    mov di,x_piece
    mul di ;ax = x * 40
    mov di,ax
    mov piece_x_end,di
    add piece_x_end,40d ;40d
    l2:
            mov cx,di;column

            mov dx,bx;row
            mov ax,[si]
            mov ah,0ch  ;draw pixel
            cmp piece_background,al
            je skip_draw
            int 10h
        skip_draw:

            inc si

      inc di
      cmp di,piece_x_end
      jne l2
inc bx
cmp bx,piece_y_end
jne l1

endm draw_piece
;-----------
;if row + column is even then background color1 (color of first square) else color2
check_square_color MACRO row,column ;if color1 then return al=0 else 1
local even_place,end_check
    mov ax,row
    add ax,column
    and ax,1        ;if last bit is 1 then odd else even
    jz even_place   ;even
    mov al,1 ;odd
    jmp end_check
even_place:
    mov al,0 ;even
end_check:
    jmp end_check
endm check_square_color
;------------
get_selected_piece MACRO g_curs ;get the selected piece type 'number' and store it in current_piece variable
;local l1,l2
    mov bx,offset square_info
    add bl,g_curs
    adc bh,0 
    push dx 
    mov dx,[bx]
    mov current_piece,dx
    pop dx


endm get_selected_piece
;------------
get_sold_moves MACRO piece_no, x_curs,y_curs ;white soldier
    ;cmp

endm get_moves
;------------

.model small
.stack 64
.data
start    dw 0    ;position of the starting point(pixel)
w       dw 40   ;width of the square
len     dw 20   ; length (height) of each row of squares
;count   dw 0    ; dummy maloosh lazma XD
color1  db 04h  ; primary color of the board
color2  db 02h  ; secondary color
c db ?
no_rows db 8    ; number of rows to be drawn
no_sqs db 8
;------------------end of Background vars
sel_color db 0ch ;color of the Navigateing square
continue_counter db 1
global_cursor db 0; 0-63

sq_cursor_h db 0; horizontal
sq_cursor_v db 0; vertical

step_size_row db 40; to traverse in a row
step_size_col dw 6400d; to traverse in a column
;draw_start_width db 15
;draw_start_height db 8
direction db 0
;-------------added 24/12


square_info LABEL BYTE
    ;first row
    db 1,2,3,4,5,3,2,1 ;sq_0  piece on it
    
    ;second row
    db 6,6,6,6,6,6,6,6 ;all are soldiers
    ;3rd row
    db 0,0,0,0,0,0,0,0
    ;4th row
    db 0,0,0,0,0,0,0,0
    ;5th row
    db 0,0,0,0,0,0,0,0
    ;6th row
    db 0,0,0,0,0,0,0,0
    ;7th
    ;db 0,0,0,0,0,0,0,0
    ;8th
    ;db 0,0,0,0,0,0,0,0
    ;--------------- draw_rect_trans macro variables
    sq_background db ?;;;;;;;;;;;;;;;;;;;;
    w_counter db ?
    l_counter db ?
    ;---------------
    ;Soldier moves
    x_sold_nxt dw ?
    y_sold_nxt dw ?
    ;---------------
    current_x db ? ;the current selected sq coordinates
    current_y db ?
    ;---------------
    current_piece dw 0
    x_cursor_current dw 0
    y_cursor_current dw 0

    x_cursor_current_end dw 0
    y_cursor_current_end dw 0

    x_cursor_nxt dw 0
    y_cursor_nxt dw 0 
;-------------------pieces--------------
;king ,wazer ,tabia , horse ,soldier ,fel
    piece_x_end dw ?
    piece_y_end dw ?
    piece_background db ?
;-------------white pieces--------------;
soldier db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;--------------------
horse db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,15,15,15,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,8,7,15,15,15,15,15,15,15,15,15,15,15,15,7,8,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;------------
;-------------
king db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,7,18,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,31,31,43,44,30,30,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,45,46,15,15,47,45,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,30,41,15,15,15,39,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,42,46,15,15,15,45,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,45,47,15,15,15,47,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,25,39,15,15,15,36,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,15,15,15,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,15,15,15,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,15,15,15,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,19,37,15,15,15,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,33,42,15,15,15,38,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,46,47,15,15,15,45,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,47,15,15,15,15,47,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,28,43,15,15,15,15,15,15,42,213,19,17,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,18,34,47,15,15,15,15,15,15,15,15,46,46,29,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,18,213,7,15,15,15,15,15,15,15,15,15,15,15,33,17,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,17,20,30,7,41,41,41,41,41,41,42,42,7,35,25,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,20,21,21,21,21,21,21,21,21,20,18,17,0,0,0,0,0,0,0,0,0,0,0,0,0
;-----------
wazer db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;----------
fel db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;--------
tabia db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,8,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0
db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;------------black pieces------------;
b_king db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,7,7,7,7,7,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;----------
b_wazer db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,8,0,0,8,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;-----------
b_fel db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,8,8,8,8,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;---------------
b_horse db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,7,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,8,8,8,8,8,8,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;--------------
b_tabia db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,15,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,8,8,8,8,8,8,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;-------------
b_soldier db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,8,8,8,8,8,8,8,8,8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
;-----------

.code
main proc far
    mov ax,@data
    mov ds,ax

    mov ax,0A000h
    mov es,ax
    
    mov ah,0
    mov al,13h
    int 10h

    mov di,0

    mov no_sqs,8
    call draw_board


    ;draw all pieces using draw_piece x,y
    ;draw white pieces
    draw_piece tabia,0,0
    draw_piece horse,1,0
    draw_piece fel,2,0
    draw_piece wazer,3,0
    draw_piece king,4,0
    draw_piece fel,5,0
    draw_piece horse,6,0
    draw_piece tabia,7,0
    draw_piece soldier,0,1
    draw_piece soldier,1,1
    draw_piece soldier,2,1
    draw_piece soldier,3,1
    draw_piece soldier,4,1
    draw_piece soldier,5,1
    draw_piece soldier,6,1
    draw_piece soldier,7,1

    ;draw black pieces
    draw_piece b_tabia,0,7
    draw_piece b_horse,1,7
    draw_piece b_fel,2,7
    draw_piece b_wazer,3,7
    draw_piece b_king,4,7
    draw_piece b_fel,5,7
    draw_piece b_horse,6,7
    draw_piece b_tabia,7,7
    draw_piece b_soldier,0,6
    draw_piece b_soldier,1,6
    draw_piece b_soldier,2,6
    draw_piece b_soldier,3,6
    draw_piece b_soldier,4,6
    draw_piece b_soldier,5,6
    draw_piece b_soldier,6,6
    draw_piece b_soldier,7,6



    ;draw_pieces--------
    ;   draw_piece fel,7,0
    ;   draw_piece tabia,6,0
    ;   draw_piece king,5,0
    ;   draw_piece horse,4,0
    ;   draw_piece wazer,3,0
    ;   draw_piece soldier,2,0
    ;   draw_piece b_fel,7,1
    ;   draw_piece b_tabia,6,1
    ;   draw_piece b_king,5,1
    ;   draw_piece b_horse,4,1
    ;   draw_piece b_wazer,3,1
    ;   draw_piece b_soldier,2,1
      ;-----------
      ;draw_piece2 test,2,4

    mov di,0
    draw_rect_trans sel_color
    continue_label:
     mov ah,0
    int 16h 
    push ax 
    call Navigate
    pop ax

    cmp al,'q'
    jnz continue_label

    get_selected_piece global_cursor
    ;call moves
    mov bl,sq_cursor_h
    mov bh,sq_cursor_v
    mov current_x,bl ;the current selected square coordinates
    mov current_y,bh
    jmp cont2
    
   
    cont2:
    mov ah,0
    int 16h
    push ax
    mov sel_color,05h
    call Navigate
    mov sel_color,0ch
    pop ax
    jmp contt
    
cont_jump:jmp continue_label

   contt: cmp al,'q'
    jnz cont2
    
    call db_to_dw_cursor
    ; mov al,sq_cursor_h
    ; cbw
    ; mov x_cursor_nxt,ax
    ; mov al,sq_cursor_v
    ; cbw
    ; mov y_cursor_nxt,ax
    call move_and_draw
    ;l mafrood yb2a feh (macro aw proc) yshoof l piece d ehh
    ;w yrsmha gwah
    ;draw_piece soldier,x_cursor_nxt,y_cursor_nxt
   ;draw_rect_xy current_x,current_y
    ;call move_validation
    cmp continue_counter,0  
    jnz cont_jump
    
    mov       ah, 4ch
    mov       al, 01h
    int       21h
    
    hlt
main endp
;-----------------
draw_board proc 
    row_l1:
    push di
    draw_rect color1
    pop di
    add di,40
    mov al,color1
    mov bl,color2
    xchg al,bl
    mov color1,al
    mov color2,bl
    dec no_sqs
    jnz row_l1
    mov no_sqs,8
    mov al,color1
    mov bl,color2
    xchg al,bl
    mov color1,al
    mov color2,bl
    add start,6400
    mov di,start
    dec no_rows
    jnz row_l1 

    
    ret
draw_board endp

Navigate proc

     ;w=up,s=down,a=left,d=right
    ;if al == ascii of any of these letters
    ;it should do a distinct reaction
    ;al == d (right)
    ;cmp al,'q';;;;;;;;;;
    ;jz select_label
    cmp al,'d';;read ascii of 'd' from al
    jz cond_go_right
    cmp al,'a'
    jz cond_go_left
    cmp al,'w'
    jz cond_go_up
    cmp al,'s'
    jz cond_l_go_down
    
    ;select_label: call Select;;;;;;;;;;;;
    exitt: ret

    cond_go_right:
    mov direction,1
    cmp sq_cursor_h,7
    jz exitt
    jmp start_nav

    cond_go_left:
    mov direction,2
    cmp sq_cursor_h,0 
    jz exitt
    jmp start_nav

    cond_go_up:
    mov direction,3
    cmp sq_cursor_v,0
    jz exitt
    jmp start_nav

    cond_l_go_down:
    mov direction,4
    cmp sq_cursor_v,7
    jz exitt
    jmp start_nav

    
    start_nav:
    push ax
    ;--------------------------------------------
    ;draw the original sq background without effecting the piece l mawgooda
    mov ax,0
    mov al,sq_cursor_h
    mul step_size_row
    mov di,ax

    mov ax,0
    mov al,sq_cursor_v
    mul step_size_col
    add di,ax

    push di
    draw_rect_trans color1
    mov al,color1
    mov bl,color2
    xchg al,bl
    mov color1,al
    mov color2,bl
    pop di

    ;--------------------------------------------
    ;result of the previous validation
    pop ax
    cmp direction,1;;read ascii of 'd' from al
    jz go_right
    cmp direction,2
    jz go_left
    cmp direction,3
    jz l_go_up
    cmp direction,4
    jz l_go_down
    ;;;;;;;;;;;;;;;;;;;;;;
    go_right:
    cmp sq_cursor_h,7
    jz jump

    inc global_cursor

    inc sq_cursor_h ;x coordinate of cursor
    add di,40d
    push di
    draw_rect_trans sel_color
    pop di
    jump:jmp end_nav
    l_go_down: jmp go_down
    l_go_up: jmp go_up
    ;;;;;;;;;;;;;;;;;;;;;;;;;;
    go_left:
    cmp sq_cursor_h,0
    jz jump
    dec global_cursor

    dec sq_cursor_h
    sub di,40d
    push di
    draw_rect_trans sel_color
    pop di
    jmp end_nav
    ;;;;;;;;;;;;;;;;;;;;;;;;
    go_up:
    cmp sq_cursor_v,0
    jz jump

    sub global_cursor,8
    dec sq_cursor_v
    sub di,6400d
    push di
    draw_rect_trans sel_color
    pop di
    jmp end_nav
    ;;;;;;;;;;;;;;;;;;;;;;;;
    go_down:
    cmp sq_cursor_v,7
    jz end_nav

    add global_cursor,8

    inc sq_cursor_v
    add di,6400d
    push di
    draw_rect_trans sel_color
    pop di
    end_nav:
    ret
Navigate endp
;---------------------
db_to_dw_cursor proc
    mov al,sq_cursor_h
    mov ah,0
    mov x_cursor_nxt,ax
    mov al,sq_cursor_v
    mov y_cursor_nxt,ax
    ret
db_to_dw_cursor endp
;---------------------
move_and_draw proc
    cmp current_piece,6
    jz skip_55
    jmp cmp2
    skip_55:
    draw_sold:
    draw_rect_xy current_x,current_y
    draw_piece horse,x_cursor_nxt,y_cursor_nxt
    jmp exit_mov_and_draw
 cmp2:
    cmp current_piece,5
    jz skip_56
    jmp exit_mov_and_draw
    skip_56:
    draw_tabia:
    draw_rect_xy current_x,current_y
    draw_piece tabia,x_cursor_nxt,y_cursor_nxt
    jmp exit_mov_and_draw
    ; cmp current_piece,4
    ; jz draw_horse
    ; cmp current_piece,3
    ; jz draw_fel
    ; cmp current_piece,2
    ; jz draw_wazer
    ; cmp current_piece,1
    ; jz draw_king

    exit_mov_and_draw:
        ret
  
   
    
    ret
move_and_draw endp
;---------------------
; moves proc
;     ;get_selected_piece global_cursor
;     cmp current_piece,9
;     jz call_sold
; ;call_sold: call soldier_move
; ret
; moves endp
; ;---------------------
; soldier_move proc
;     mov al,sq_cursor_h
;     cbw 
;     mov current_x,ax
;     mov x_sold_nxt,ax
;     xor ax,ax

;     mov al,sq_cursor_v
;     cbw
;     mov current_y,ax
;     mov y_sold_nxt,ax
;     inc y_sold_nxt
;     ;draw_piece2 soldier,x_sold_nxt,y_sold_nxt
;     ret
; soldier_move endp

; Select proc
; mov bx,offset square_info
; add bl,global_cursor
; push cx
; mov cx,[bx]
; mov current_piece,cx
; pop cx
; cmp current_piece,9
; jz call_sold

; call_sold:
; call move_soldier

; ret
; Select endp
;------------------
; move_soldier proc
; sold_loop:
; mov ah,0
; int 16h
; cmp al,'q'
; jz exit_sold
; cmp al,'s'
; jnz sold_loop

; sold_move:
; add global_cursor,8
; push ax
; mov al,sq_cursor_h
; cbw
; mov x_cursor_nxt,ax
; mov ax,0 
; mov al,sq_cursor_v
; cbw
; mov y_cursor_nxt,ax
; inc sq_cursor_v
; draw_piece2  soldier,x_cursor_nxt,y_cursor_nxt
; exit_sold:ret

; ret
; move_soldier endp
end main